#!/bin/sh

# 24.07.2007 Volker Quetschke
# Test the $(macro:n) macro extension.
# (issue 78776)

: ${DMAKEPROG:=dmake}
file1="mfile1.mk"
tmpfiles="$file1"
CLEANUP="rm -rf $tmpfiles"

trap "{ echo 'trapped signal - removing temporary files' ; $CLEANUP ; }" 1 2 3 15

# Remove files from prior failed run
$CLEANUP

# Remember to quote variables in generated makefiles( $ -> \$ ).
# Test 1 - Test if :n works.
cat > $file1 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

.WINPATH:=

MACRO:=/tmp/./a "/tmp/a b/xxx/../b" /tmp

all :
	@echo 1\$(MACRO:n)1
EOT

output1=`eval ${DMAKEPROG} -r -f $file1`
result1=$?
if test "$output1" != "1/tmp/a \"/tmp/a b/b\" /tmp1"; then
  echo "Subtest 1: Wrong result: $output1"
  result1=1
else
  echo "Subtest 1: OK"
fi

# Test 2 - Test if the .WINPATH setting is honored
cat > $file1 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

MACRO:=/tmp

all .WINPATH :
	@echo 2\$(MACRO:n)2

EOT

output2=`eval ${DMAKEPROG} -r -f $file1`
result2=$?
if test x`uname -o 2> /dev/null` = "xCygwin"; then
  if test "$output2" != "2`cygpath -m /tmp`2"; then
    echo "Subtest 2: Wrong result: $output2"
    result2=1
  else
    echo "Subtest 2: OK"
  fi
else
  if test "$output2" != "2/tmp2"; then
    echo "Subtest 2: Wrong result: $output2"
    result2=1
  else
    echo "Subtest 2: OK"
  fi
fi


if test $result1 -eq 0 -a $result2 -eq 0 ; then
    echo "Success - Cleaning up" && $CLEANUP
    exit
else
    echo "Failure!"
    exit 1
fi
