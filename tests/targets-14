#!/bin/sh

# 16.07.2006 Volker Quetschke
# Check that evaluating an empty macro and thereby initializing it does not
# prevent the *= and *:= operator from assigning a new value.
# (issue 67166)

: ${DMAKEPROG:=dmake}
file1="mfile1.mk"
tmpfiles="$file1"
STARTDIR="`pwd`"; WORKDIR="$0-OUTPUT"
CLEANUP="eval (cd $STARTDIR; rm -rf $WORKDIR)"
$CLEANUP # Zap remnants of any failed run
mkdir "$WORKDIR"; cd "$WORKDIR"

trap "{ echo 'trapped signal - removing temporary files' ; $CLEANUP ; }" 1 2 3 15

# Remember to quote variables in generated makefiles( $ -> \$ ).
# Check that we set AAA to set_AAA.
cat > $file1 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

.IF \$(AAA)!=321
BLA=bla
.ENDIF

AAA*=set_AAA

all:
	@+echo "\$(AAA)"
EOT

output1=`eval ../${DMAKEPROG} -rf $file1 2>&1 `
result1=$?

if test $output1 = "set_AAA" ; then
  dummy=1
  # OK
else
  echo "Test 1: Wrong result: $output1"
  echo
  result1=1
fi

if test $result1 -eq 0 ; then
  echo "Success - Cleaning up"
  $CLEANUP
  result=0
else
  echo "Failure! Unexpected result."
  result=1
fi
exit $result
