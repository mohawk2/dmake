#!/bin/sh

# 03.06.2006 Volker Quetschke
# Percent target definitions were not handled properly before.
# (issue 64869) - Two more testcases

: ${DMAKEPROG:=dmake}
file1="mfile1.mk"
file2="mfile2.mk"
tmpfiles="$file1 $file2"

trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15

# Remove files from prior failed run
rm -rf $tmpfiles

# Remember to quote variables in generated makefiles( $ -> \$ ).
# Testcase 1 - %-target prerequisite - syntax error
cat > $file1 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

.PHONY all : %.c
	+true all

EOT

# Testcase 2 - The recipe part is ignored - syntax error
cat > $file2 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

all :
	+true all

.PHONY : all ; +echo no recipe expected

EOT

output1=`eval ${DMAKEPROG} -r -f $file1 2>&1 `
result1=$?
output2=`eval ${DMAKEPROG} -r -f $file2 2>&1 `
result2=$?

if echo $output1 | grep 'Error: -- Syntax' > /dev/null 2>&1 ; then
  result1=0
else
  echo "Test 1: Wrong result: $output1"
  echo
  result1=1
fi

if echo $output2 | grep 'Error: -- Unexpected recipe' > /dev/null 2>&1 ; then
  result2=0
else
  echo "Test 2: Wrong result: $output2"
  echo
  result1=1
fi

if test $result1 -eq 0 -a $result2 -eq 0; then
  echo "Success - Cleaning up"
  rm -rf $tmpfiles
exit
  result=0
else
  echo "Failure!"
  result=1
fi
exit $result
