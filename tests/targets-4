#!/bin/sh

# 03.06.2006 Volker Quetschke
# Check that a warning is issued for special or meta targets with
# empty recipes.
# (issue 65360) - Well, the issue is talking about slightly a different
# issue but a related patch was committed with this issue reference.

: ${DMAKEPROG:=dmake}
file1="mfile1.mk"
file2="mfile2.mk"
tmpfiles="$file1 $file2"
STARTDIR="`pwd`"; WORKDIR="$0-OUTPUT"
CLEANUP="eval (cd $STARTDIR; rm -rf $WORKDIR)"
$CLEANUP # Zap remnants of any failed run
mkdir "$WORKDIR"; cd "$WORKDIR"

trap "{ echo 'trapped signal - removing temporary files' ; $CLEANUP ; }" 1 2 3 15

# Remember to quote variables in generated makefiles( $ -> \$ ).
# Testcase 1 - AUGMAKE meta targets
cat > $file1 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

.NIX :

something :
	+echo "A target."

EOT

# Testcase 2 - Percent targets
cat > $file2 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

%.a : %.b

something :
	+echo "A target."

EOT

output1=`eval ../${DMAKEPROG} -r -f $file1 2>&1 `
result1=$?
output2=`eval ../${DMAKEPROG} -r -f $file2 2>&1 `
result2=$?

if echo $output1 | grep -v 'Warning: -- Empty recipe' > /dev/null 2>&1 ; then
  echo "Test 1: Wrong result: $output1"
  echo
  result1=1
fi

if echo $output2 | grep -v 'Warning: -- Empty recipe' > /dev/null 2>&1 ; then
  echo "Test 2: Wrong result: $output2"
  echo
  result1=1
fi

if test $result1 -eq 0 -a $result2 -eq 0; then
  echo "Success - Cleaning up"
  $CLEANUP
exit
  result=0
else
  echo "Failure!"
  result=1
fi
exit $result
