#!/bin/sh

# 01.06.2005 Volker Quetschke
# Basic test of dmake existence and the needed infrastructure.

: ${DMAKEPROG:=dmake}
file1="mymakefile.mk"
file2="mytestfile"
sdir="space dir"
file3="`pwd`/$sdir/start.mk"
file4="$sdir/included.mk"
tmpfiles="$file1 $file2"

trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles "$sdir" ; }' 1 2 3 15

# Test for "test" programm in path
which test > /dev/null || { echo "Failure! \"test\" program missing." ; exit 1; } 
echo "Found \"test\" program."
test=`which test`

# Test for "echo" programm in path
which echo  > /dev/null || { echo "Failure! \"echo\" program missing." ; exit 1; }
echo "Found \"echo\" program."

# Test for dmake program
${test} -x "${DMAKEPROG}" || { echo "Failure! \"dmake\" is missing." ; exit 1; }
echo "Found \"dmake\" program."

# Remember to quote variables in generated makefiles( $ -> \$ ).
cat > $file1 <<EOT
# simple makefile
${file2}:
	@echo 'Generating ${file2}'
	touch ${file2}
EOT

${DMAKEPROG} -r -f $file1
result1=$?
if ${test} -e "${file2}"
then
  echo "File found"
else
  echo "File missing"
  result1=1
fi

${test} -d "$sdir" || mkdir "$sdir"
cat <<EOT >"$file3"
.INCLUDE .NOINFER : \$(INCFILENAME:d)included.mk
EOT
cat <<EOT >"$file4"
all:
	@echo foo
EOT
output2=`${DMAKEPROG} -f "$file1" "MAKESTARTUP=$file3" all`
result2=$?
if ${test} "$output2" = "foo"
then
  echo "Right result: space-with-place works"
else
  echo "Wrong result: '$output2'"
  result2=1
fi

if ${test} $result1 -eq 0 -a $result2 -eq 0; then
  echo "Success - Cleaning up"
  rm -rf ${tmpfiles} "$sdir"
else
  echo "Failure!"
  exit 1
fi
