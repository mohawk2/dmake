#!/bin/sh

# 01.06.2005 Volker Quetschke
# Basic test of dmake existence and the needed infrastructure.

: ${DMAKEPROG:=dmake}
file1="mymakefile.mk"
file2="mytestfile"
tmpfiles="$file1 $file2"
STARTDIR="`pwd`"; WORKDIR="$0-OUTPUT"
CLEANUP="eval (cd $STARTDIR; rm -rf $WORKDIR)"
$CLEANUP # Zap remnants of any failed run
mkdir "$WORKDIR"; cd "$WORKDIR"

trap "{ echo 'trapped signal - removing temporary files' ; $CLEANUP ; }" 1 2 3 15

# Test for "test" programm in path
which test > /dev/null || { echo "Failure! \"test\" program missing." ; exit 1; }
echo "Found \"test\" program."
test=`which test`

# Test for "echo" programm in path
which echo  > /dev/null || { echo "Failure! \"echo\" program missing." ; exit 1; }
echo "Found \"echo\" program."

# Test for dmake program
${test} -x "../${DMAKEPROG}" || { echo "Failure! \"dmake\" is missing." ; exit 1; }
echo "Found \"dmake\" program."

# Remember to quote variables in generated makefiles( $ -> \$ ).
cat > $file1 <<EOT
# simple makefile
${file2}:
	@echo 'Generating ${file2}'
	touch ${file2}
EOT

../${DMAKEPROG} -r -f $file1
result=$?
if ${test} ! -e "${file2}"; then
  echo "File missing"
  result=1
fi

${test} $result -eq 0 && echo "Success - Cleaning up" && $CLEANUP
${test} $result -ne 0 && echo "Failure!"
exit $result

