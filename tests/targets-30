#!/bin/sh

# 05.02.2008 Volker Quetschke
# Check that OOODMAKEMODE=y does not normalize ./../foo.
# (issue 84800)

: ${DMAKEPROG:=dmake}
file1="mfile1.mk"
tmpfiles="$file1"
STARTDIR="`pwd`"; WORKDIR="$0-OUTPUT"
CLEANUP="eval (cd $STARTDIR; rm -rf $WORKDIR)"
$CLEANUP # Zap remnants of any failed run
mkdir "$WORKDIR"; cd "$WORKDIR"

trap "{ echo 'trapped signal - removing temporary files' ; $CLEANUP ; }" 1 2 3 15

# Remember to quote variables in generated makefiles( $ -> \$ ).
cat > $file1 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

OOODMAKEMODE:=y

# See if OOODMAKEMODE keeps ./../all
./../all :
	@echo X\$@Y

EOT


output1=`eval ../${DMAKEPROG} -rf $file1 2>&1 `
result1=$?
if test $result1 -ne 0 -o "$output1" != "X./../allY"; then
  echo "Test 1: Wrong result: $output1"
  result1=1
fi
# Remember to quote variables in generated makefiles( $ -> \$ ).
cat > $file1 <<EOT
SHELL*:=/bin/sh
SHELLFLAGS*:=-ce

OOODMAKEMODE:=

# See if OOODMAKEMODE= removes the leading .
./../all :
	@echo X\$@Y

EOT


output2=`eval ../${DMAKEPROG} -rf $file1 2>&1 `
result2=$?
if test $result2 -ne 0 -o "$output2" != "X../allY"; then
  echo "Test 2: Wrong result: $output2"
  result2=1
fi

if test $result1 -eq 0 -a $result2 -eq 0 ; then
  echo "Success - Cleaning up"
  $CLEANUP
  exit 0
else
  echo "Failure!"
  exit 1
fi
